var validate = require('./../validate');

var call = {
    _fields: ['created_at','created_by','hearted','hearts','num_hearts','text','target','source','type'],
    _key: function(){},
    /**
     * @apiVersion 0.6.0
     * @api {get} api.story.id(); {}.id
     * @apiName id
     * @apiDescription Retrieve a single story of a task.
     * @apiGroup Story
     * @apiGroupDescription A story represents an activity associated with an object in the Asana system. Stories are generated by the system whenever users take actions such as creating or assigning tasks, or moving tasks between projects. Comments are also a form of user-generated story.
     *
     * @apiParam {Number} id Story identifier.
     * @apiParam {Object} [object] Options object.
     * @apiParam {String[]} [object.fields] Override default return fields : *['created_at','created_by','hearted','hearts','num_hearts','text','target','source','type']*
     *
     * @apiExample Streaming example:
     *  api.story.id(1234567890).on('readable',function(){
     *    console.log('Data:',this.read());
     *  }).on('end',function(){
     *    console.log('Response received.');
     *  }).on('error',function(err){
     *    console.log('An error occurred: ',err);
     *  });
     * @apiExample Callback example:
     *  api.story.id(1234567890,function(err,data){
     *      if(err){
     *          console.log('An error occurred:',err);
     *      }else{
     *          console.log('Data:',data);
     *      }
     *  });
     *
     * @apiSuccessStructure StorySuccess
     */
    id : function get(){
        return validate(arguments,{method:'get',path:'/stories/@0',name:'story.id',allowedFields:this._fields,responseType:1,key:this._key()});
    },
    /**
     * @apiVersion 0.6.0
     * @api {get} api.story.list(); {}.list / api.stories / api.task.stories
     * @apiName list
     * @apiDescription Retrieve a list of (filtered) tasks.
     * @apiGroup Story
     *
     * @apiParam {Number} id Task identifier to find connected stories.
     * @apiParam {Object} [object] Options object.
     * @apiParam {String[]} [object.fields] Override default return fields : *['created_at','created_by','hearted','hearts','num_hearts','text','target','source','type']*
     *
     * @apiExample Streaming example:
     *  api.story.list(1234567890).on('readable',function(){
     *    console.log('Data:',this.read());
     *  }).on('end',function(){
     *    console.log('Response received.');
     *  }).on('error',function(err){
     *    console.log('An error occurred: ',err);
     *  });
     * @apiExample Callback example:
     *  api.story.list(1234567890,function(err,data){
     *      if(err){
     *          console.log('An error occurred:',err);
     *      }else{
     *          console.log('Data:',data);
     *      }
     *  });
     *
     * @apiSuccessStructure StoriesSuccess
     */
    list : function list(){
        //retrieve all stories for a task
        return validate(arguments,{method:'get',path:'/tasks/@0/stories',name:'story.list',allowedFields:this._fields,key:this._key()});
    },
    /**
     * @apiVersion 0.6.0
     * @api {post} api.story.create(); {}.create / api.task.addStory
     * @apiName create
     * @apiDescription Create a story on a task.
     * @apiGroup Story
     *
     * @apiParam {Number} id Task identifier to create the story in.
     * @apiParam {Object} object Options object.
     * @apiParam {String} object.text Description field.
     * @apiParam {String[]} [object.fields] Override default return fields : *['created_at','created_by','hearted','hearts','num_hearts','text','target','source','type']*
     *
     * @apiExample Streaming example:
     *  api.story.create(5678901234,{text:'opmerking2'}).on('readable',function(){
     *    console.log('Data:',this.read());
     *  }).on('end',function(){
     *    console.log('Response received.');
     *  }).on('error',function(err){
     *    console.log('An error occurred: ',err);
     *  });
     * @apiExample Callback example:
     *  api.story.create(5678901234,{text:'opmerking2'},function(err,data){
     *      if(err){
     *          console.log('An error occurred:',err);
     *      }else{
     *          console.log('Data:',data);
     *      }
     *  });
     *
     * @apiSuccessStructure StorySuccess
     */
    create: function(){
        return validate(arguments,{method:'post',path:'/tasks/@0/stories',name:'story.create',allowedFields:this._fields,allowedOptions:['text'],optionsType:'body',responseType:1,key:this._key()});
    }
};
module.exports = call;